<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.system.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="project.system.domain.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_phonenumber" jdbcType="CHAR" property="userPhonenumber" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="user_gender" jdbcType="CHAR" property="userGender" />
    <result column="user_position" jdbcType="VARCHAR" property="userPosition" />
    <result column="socket_id" jdbcType="VARCHAR" property="socketId" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="email_authorization_code" jdbcType="VARCHAR" property="emailAuthorizationCode" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_phonenumber, user_password, dept_id, company_id, user_gender,
    user_position, socket_id, user_email, email_authorization_code
  </sql>
<!--  <select id="selectbycompanyid" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <include refid="Base_Column_List" />-->
<!--    from user-->
<!--    where company_id = #{companyId,jdbcType=INTEGER}-->
<!--  </select>-->

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
<!--  获取指定公司下没有加入部门的用户-DKR-->
  <select id="getNoDeptUsers" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where company_id=#{companyId,jdbcType=INTEGER} and user_id &lt;&gt; #{userId,jdbcType=INTEGER} and dept_id=0
    order by convert(user_name using gbk)
  </select>
  <!--  获取部门联系人@author-DKR-->
  <select id="getDeptContact" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where dept_id &lt;&gt; 0 and dept_id=#{deptId,jdbcType=INTEGER} and user_id &lt;&gt; #{userId,jdbcType=INTEGER}
    order by convert(user_name using gbk)
  </select>
  <!--  获取全部联系人@author-DKR-->
  <select id="getCompContact" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where company_id=#{companyId,jdbcType=INTEGER} and user_id &lt;&gt; #{userId,jdbcType=INTEGER}
    order by convert(user_name using gbk)
  </select>
  <select id="selectByCompanyAndDept" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where dept_id = #{deptId,jdbcType=INTEGER}
    and company_id=#{companyId}
  </select>
  <select id="selectByCompanyId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <!--  通过deptId获取一个部门的全部人员-->
  <select id="selectByDeptId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>

  <!--  判断电话号码是否被注册@author DKR-->
  <select id="getUserByPhoneNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user_phonenumber=#{userPhonenumber,jdbcType=VARCHAR}
  </select>
  <!--  登录密码验证@author DKR-->
  <select id="getUserByPhoneNumberAndPassword" parameterType="project.system.domain.User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user_phonenumber=#{userPhonenumber,jdbcType=VARCHAR} and user_password=#{userPassword,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="project.system.domain.User">
    insert into user (user_id, user_name, user_phonenumber,
      user_password, dept_id, company_id,
      user_gender, user_position, socket_id,
      user_email, email_authorization_code)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPhonenumber,jdbcType=CHAR},
      #{userPassword,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER},
      #{userGender,jdbcType=CHAR}, #{userPosition,jdbcType=VARCHAR}, #{socketId,jdbcType=VARCHAR},
      #{userEmail,jdbcType=VARCHAR}, #{emailAuthorizationCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="project.system.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPhonenumber != null">
        user_phonenumber,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userPosition != null">
        user_position,
      </if>
      <if test="socketId != null">
        socket_id,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="emailAuthorizationCode != null">
        email_authorization_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhonenumber != null">
        #{userPhonenumber,jdbcType=CHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPosition != null">
        #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="socketId != null">
        #{socketId,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthorizationCode != null">
        #{emailAuthorizationCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="project.system.domain.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhonenumber != null">
        user_phonenumber = #{userPhonenumber,jdbcType=CHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=CHAR},
      </if>
      <if test="userPosition != null">
        user_position = #{userPosition,jdbcType=VARCHAR},
      </if>
      <if test="socketId != null">
        socket_id = #{socketId,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthorizationCode != null">
        email_authorization_code = #{emailAuthorizationCode,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="project.system.domain.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_phonenumber = #{userPhonenumber,jdbcType=CHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      user_gender = #{userGender,jdbcType=CHAR},
      user_position = #{userPosition,jdbcType=VARCHAR},
      socket_id = #{socketId,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      email_authorization_code = #{emailAuthorizationCode,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>
